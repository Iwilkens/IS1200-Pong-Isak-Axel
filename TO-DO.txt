DISPLAY
Skärmen har 32x 128 pixlar. Skärmen har 512 minnesbytes för alla pixlar (4096 bitar, 32x128).

PORTF = Button 1 längst till höger.

Button 1 = buttons (1).
Button 2 = buttons (2).
Button 3 = buttons (4).
Button 4 = buttons (8).

** ATT TESTA **

Ändra if statement så den använder ">=" och "<=" istället för ">" och "<".
if (((ball_y + ball_shape) >= paddle1_y) && (ball_y - ball_shape) <= (paddle1_y + paddle_height))

---
Testa att skriva om denna:
if (ball_y < 0 || ball_y > (31 - ball_shape))
Till:
if (ball_y <= 0 || ball_y >= (32 - ball_shape)) 
Och ta bort count funktionen för att se om bollen fortfarande limmas i taket.

Om ovan inte funkar: 

Testa ändra if satsen som ser till att bollen inte limmas fast i taket av oled skärmen.
Egentligen samma fast utan count variablen.

if(ball_speed_y < 0.3) && (ball_y <= 10))
{
 ball_speed_y = 1;
}

---

Ta bort dessa minus för att det inte ska vara så likt.
int ball_x = 128 / 2 - 5
float paddle2_y = 32 / 2 - 2;
float paddle1_y = 32 / 2 - 2;

Ändra dessa:
paddle_size;
paddle_width; (till samma som bollen 2)

---

Tycker vi ska invertera logiken för denna. (paddle 1 och paddle 2 collision).
Kommer ej spela någon roll för hur spelet spelas.

 if(paddle1_up == 1)
  {
	if(ball_speed_y < 0)
    {
      ball_speed_y = ball_speed_y * 2; 
    }
    else if(ball_speed_y > 0)
    {
      ball_speed_y = ball_speed_y / 2;
    }
    else
    {
      ball_speed_y = -1;
    }  
  }

---

Dessa ligger i game.c

int game_active = 0;
int game_mode = 0;
int player = 0;
int lives = 0;

vilka av dessa använder vi?

---

Ändra dessa värden i collision filen som bestämmer när det är är mål.
else if (ball_x > 138)
else if (ball_x < -21)

---

** La till nya kommentarer i Collision **

---
Ändra dessa värden till typ 1.8 eller 1.65.

  if(ball_speed_y > 1.7){
    ball_speed_y = 1.7;
  }
  if(ball_speed_y < -1.7){
    ball_speed_y = -1.7;
  }
